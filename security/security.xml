<?xml version="1.0" encoding="UTF-8"?>
<odoo>
    <data>
        <record id="group_hr_manager" model="res.groups">
            <field name="name">HR Manager</field>
            <field name="category_id" ref="base.module_category_human_resources"/>
        </record>
        <record id="group_hr_officer" model="res.groups">
            <field name="name">HR Officer</field>
            <field name="category_id" ref="base.module_category_human_resources"/>
        </record>

        <!-- Record rule for employee.demotion -->
        <record id="employee_demotion_rule" model="ir.rule">
            <field name="name">Employee Demotion: Restrict by Company</field>
            <field name="model_id" ref="model_employee_demotion"/>
            <field name="domain_force">[
                '|',
                ('employee_id', '=', user.employee_ids.id),
                ('company_id', 'in', [d.id for d in user.employee_ids.mapped('company_id')])
                ]
            </field>
            <field name="groups" eval="[(4, ref('base.group_user'))]"/>
            <!-- Replace 'base.group_user' with the appropriate group(s) that should have this restriction -->
        </record>

        <record id="employee_promotion_rule" model="ir.rule">
            <field name="name">Employee Demotion: Restrict by Company</field>
            <field name="model_id" ref="model_employee_promotion"/>
            <field name="domain_force">[
                '|',
                ('employee_id', '=', user.employee_ids.id),
                ('company_id', 'in', [d.id for d in user.employee_ids.mapped('company_id')])
                ]
            </field>
            <field name="groups" eval="[(4, ref('base.group_user'))]"/>
            <!-- Replace 'base.group_user' with the appropriate group(s) that should have this restriction -->
        </record>

    </data>
</odoo>


